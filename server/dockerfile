# # Use the official Node.js 16 image as the base image
# FROM node:20 as builder

# # Set the working directory inside the container
# WORKDIR /app

# # Copy the package.json and package-lock.json files to install dependencies
# COPY package.json package-lock.json angular.json /app/

# # Install the dependencies
# RUN npm install

# # Copy the entire Angular front-end application to the container
# COPY . /app/

# # Build the Angular app
# RUN npm run build --omit=dev --output-path=/app/dist/frontend

# Use a lightweight Nginx image to serve the Angular app
FROM ubuntu:20.04

RUN apt update

RUN apt -y install nginx libnginx-mod-rtmp ffmpeg ufw systemd

RUN ufw allow 'Nginx HTTP'

COPY ./nginx.conf /etc/nginx/conf.d/default.conf

RUN ufw allow 1935/tcp

# RUN systemctl reload nginx.service

COPY ./LondonBikeRideCityTour2022.mp4 /video.mp4

RUN ffmpeg -re -i "/video.mp4" -c:v copy -c:a aac -ar 44100 -ac 1 -f flv rtmp://localhost/live/stream

# # Copy the compiled Angular app from the build stage to the Nginx container
# COPY --from=builder /app/dist/frontend /usr/share/nginx/html

# # Expose the port that Nginx will listen on (typically 80 for HTTP)
EXPOSE 1935

# # Command to start Nginx and serve the Angular app
# CMD ["nginx", "-g", "daemon off;"]